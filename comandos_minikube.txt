Estas 3 lienas son para iniciar la primera vez o si esta detenido (PC)
minikube start --driver=hyperv
minikube status
minikube ip
--------------------------------------------------------------------
para Notebook:
kubectl config use-context docker-desktop
kubectl cluster-info
kubectl get nodes
kubectl get pods --all-namespaces
--------------------------------------------------------------

Para ejecutar:
build_all_jar
clean_docker (solo si se quieren eliminar todos los volúmenes y todo de docker)
build_and_push_all
deploy_all

--------------------------------------------------------------------
Para verificar el estados de los recursos :

kubectl get pods
kubectl get pods -o wide
kubectl logs
kubectl logs "nombre pod" --tail=NUMERO
kubectl get deployments
kubectl get services
kubectl get configmap
kubectl get secret
kubectl get pvc

kubectl get jobs
kubectl get pods
--------------------------------------------------------------------
En PC:
Para acceder a la aplicacion:

el numero antes de ":" es la ip de la minikube (se obtiene con minikube ip)

http://172.20.218.237:30080

eureka:
http://172.20.218.237:30861
--------------------------------------------------------------------
En Notebook al usar kubernetes de docker desktop se usa:
Para acceder a la aplicacion:
http://localhost:30080

eureka:
http://localhost:30861
--------------------------------------------------------------------
Limpieza(opcional, pero la hago igual):
clean_k8s
--------------------------------------------------------------------
Para detener lo de minikube (PC):
minikube stop

y para limpieza completa(eliminación total de vm y todo, EN PC):
minikube delete

--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
para SonarQube:
PASOS PARA CONFIGURAR SONARQUBE CON GITHUB ACTIONS

=======================
1. EJECUTAR SONARQUBE
=======================

Abrir una terminal (CMD o PowerShell) y ejecutar:

docker run -d --name sonarqube -p 9000:9000 sonarqube:lts

Esto levantará SonarQube en la URL:
http://localhost:9000


========================================
2. EXPONER SONARQUBE USANDO NGROK
========================================

En otra terminal, ejecutar:

ngrok http 9000

Esto generará una URL pública como:
https://xxxxxx.ngrok-free.app

(Guardar esta URL para usarla en GitHub)


=================================================
3. CREAR SECRET EN GITHUB: SONAR_HOST_URL
=================================================

1. Ir al repositorio en GitHub
2. Ir a: Settings → Secrets and variables → Actions → Secrets
3. Crear un nuevo secret:
   - Nombre: SONAR_HOST_URL
   - Valor: la URL pública generada por ngrok (por ejemplo https://xxxxxx.ngrok-free.app)


=================================================
4. GENERAR TOKEN DE ACCESO EN SONARQUBE
=================================================

1. Ir al navegador y abrir la URL pública de ngrok
2. Iniciar sesión en SonarQube:
   - Usuario: admin
   - Contraseña: admin
   - (Cambiar la contraseña si es necesario)
	- La nueva es la que ya se
3. Ir a la parte superior derecha → "My Account" → "Security"
4. En la sección "Generate Tokens":
   - Escribir un nombre como: github-token
   - Hacer clic en "Generate"
5. Copiar el token generado (empieza con sqp_...)